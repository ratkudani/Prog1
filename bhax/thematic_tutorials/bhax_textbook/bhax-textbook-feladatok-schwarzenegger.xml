<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:lang="hu">
    <info>
        <title>Helló, Schwarzenegger!</title>
        <keywordset>
            <keyword/>
        </keywordset>
    </info>
    <section>
        <title>Szoftmax Py MNIST</title>
        <para>
            Python
        </para>
        <para>
            Megoldás videó: <link xlink:href="https://youtu.be/j7f9SkJR3oc">https://youtu.be/j7f9SkJR3oc</link>      
        </para>
        <para>
            <link xlink:href="https://github.com/ratkudani/Prog1/tree/master/Feladatok/MNIST">MNIST</link>
        </para>
        <para>
            <link xlink:href="https://github.com/tensorflow/tensorflow/releases/tag/v0.9.0">TensorFlow</link>
        </para>
        <para>
            <link xlink:href="https://progpater.blog.hu/2016/11/13/hello_samu_a_tensorflow-bol">Progpater-es link</link>
        </para>
        <para>
            Az MNIST egy olyan adatbázis, ahol az általunk választott, azaz megadott és kézzel beírt számokat tárólhatjuk.
            Ezeket az adatokat a legtöbb esetben képfeldogozó és képeket felismerő programok szokták használni, alkalmazni. 
            A program a feladat leírása alapján, Python magasszintű programozási nyelven íródott, amelyhez a képfelismerés miatt 
            még szükségünk van továbbá a TensorFlow nevezetű kiegészítő programra. A feldolgozás során 60000 adategységet tartalmazó adatbázist fogjuk felhasználni,
            amely 28*28-as felbontású, méretű képekkel dolgozik, amelyek fekete és fehér pixelekből állnak. Jelen feladatban, ahogy az a mellékelt videó alapján leírva lesz
            az a lényege, hogy vesszük az alap adatbázisunkat, ami 60000 képpel tanulja meg amit kiadunk neki. Ebben a példában a már említett felbontásban tálalt 0-tól 10-ig terjedő
            fekete pontú és fehér alapú képeket. A tanulás eredményét pedig egy 10000 darabból álló kontroll képpel tudjuk letesztelni.
        </para>
        <para>
        A telepítés menete, hogy használni tudjuk a TensorFlow-ot a programunk futásához:
        </para>
        <para>
        I. lépés -> sudo apt install python3-dev python3-pip
        </para>
        <para>
        II. lépés -> sudo pip3 install -U virtualenv # system-wide install
        </para>
        <para>
        III. lépés -> virtualenv --system-site-packages -p python3 ./venv
        </para>
        <para>
        IV. lépés -> source ./venv/bin/activate # sh, bash, ksh, or zsh
        </para>
        <para>
        V. lépés -> pip install --upgrade pip
        </para>
        <para>
        VI. lépés -> pip install --upgrade tensorflow
        </para>
        <para>
        Ezek után még feltétlenül szükségünk lesz a TensorFlow-wal kapcsolatos megfelelő head-örök implementálására.
        </para>
        <para>
         A futtatáshoz szükségünk van az SMNIST programhoz, amellyel 60000 képet készítünk, amihez még kelleni fog 10000 db kép a kontrollhoz.
            Futtatni a következőképpen kell:
        </para>
        <para>
            I. lépés -> A programunkat tartalmazó mappába belépve beírjuk, hogy: g++ smnistg.cpp -o smnistg -lpng
        </para>
        <para>
            II. lépés -> ./smnistg train-labels-idx1-ubyte train-images-idx3-ubyte 60000
        </para>
        <para>
            III. lépés -> ./smnistg t10k-labels-idx1-ubyte t10k-images-idx3-ubyte 10000
        </para>
        <para>
            A futtatási részt magamtól nem igazán értettem, ezért az ihletért <link xlink:href="https://gitlab.com/Laj01/bhax?fbclid=IwAR3cledzjwUQ2fkmP8R3_bp_gWVOhspZf_zzQ3krWEt9cckauDUO89QGUeY">Nagy Lajos</link>-hoz fordultam.
        </para>
    </section>        

<!--
    <section>
        <title>Szoftmax R MNIST</title>
        <para>
            R            
        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:                
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat...
        </para>
    </section>        
-->
    
    <section>
        <title>Mély MNIST</title>
        <para>
            Python            
        </para>
        <para>
            Megoldás forrása:                
        </para>
        <para>
            <link xlink:href="https://chromium.googlesource.com/external/github.com/tensorflow/tensorflow/+/r0.10/tensorflow/g3doc/tutorials/mnist/pros/index.md">TensorFlow weboldal a feladathoz, mint forrás amelyből a megoldást fordítottam.</link>
        </para>
        <para>
            <link xlink:href="https://github.com/ratkudani/Prog1/blob/master/Feladatok/deep_MNIST_for_experts.py">TensorFlow MNIST</link>
        </para>
        <para>
          Lényegbe foglalva a feladatban szereplő témát, segítségűl hívom az előbbi feladat során szerzett ismereteinket. Rövid bevezőként némi összehasonlítás során megállapíthatjuk, hogy a jelenlegi kiértékelendő koncepciónkban egy többrétegő soft mnist-et kapunk, ami ebből adódóan pontosabban végzi el a kapott műveleteket amelyeket beleimplementáltunk és meghatároztunk. Továbbá némi "hátrányt" is megfigyelhetünk, amit a megfigyeléseink során a nagyobb erőforrásigényben találhatunk meg. Ismeeretünket kiterjesztve közlendő, hogy a TensorFlow egy nagyon erős könyvtár, ami a széles skálájú számokkal dolgozik. Ezáltal is elősegítve az implementáló és tanuló mély neutrális működést.
        </para>
        <para>
            Kezdésként fontos tisztázni, hogy az első két sor feltétlenül szükséges, mivel boilerplate-ként szerepel jelen esetben. Ugyanis ezáltal töltünk és olvasunk adatot atomataként. A következő pár sor fogja tartalmazni a kiszámítási gráf építését fogja lekreálni, és a futtató gráfot is. Tovább építve szükséges a Softmax Regressziós Modelt, ahol egy gyökérpontokat készítünk a bemeneti képhez és a célkimeneti osztályokhoz. Ezeket az x és y_ változókkal jelöljük. Az első változó értéke a 28*28-as pixeles MNIST-es képet jelöli. A tanulás maga a model kereteiben belül zajlik majd le. A TensorFlow egyik előnye ezen a téren, hogy nem csak sima bemenetként tuddjuk kezelni a mélységet és a tendenciát, hanem változókként.
        </para>
    </section>        
<!--
    <section>
        <title>Deep dream</title>
        <para>
            Keras            
        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:                
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat...
        </para>
    </section>        
-->                  
    <section>
        <title>Minecraft-MALMÖ</title>
        <para>
        </para>
        <para>
            Megoldás videó: <link xlink:href="https://youtu.be/bAPSu3Rndi8">https://youtu.be/bAPSu3Rndi8</link>      
        </para>
        <para>
            Megoldás forrása:                
        </para>
        <para>
            <link xlink:href="https://bhaxor.blog.hu/2018/10/28/minecraft_steve_szemuvege">Minecraft-MALMÖ bhax-blog forrás</link>
        </para>
        <para>
        A programot a Python programnyelven írtuk meg, amely a Mojang által készített Minecraft nevezetű játékához kapcsolódik. A feladat fő szegmense, hogy a játékban megtalálható karakterünknek megadunk egy általunk választott lépésszámot, ami egy bármekkora pozitív egész lehet, de a figyelem arra irányul, hogy a bábunak, azaz a karakternek nem szabad megállnia, pontosabban elakadnia sehol sem. A program működése során ugyebár végig, a haladás során beolvassuk a karakterünk körüli blokkokat (a játék kockából álló világból áll) és amíg lehet, addig egyenesen halad. Az elakadás esetén a beolvasott környezeti blokkokat elemezve azt az utat választjuk ki, amelyik hamarabb esik a keresési folyamatba. Ezt úgy vizsgáljuk meg, hogy a folyamat során a karakterünk irányától jobbra kezdjük az átvizsgálást, és az első lehetőséget kihasználva megyünk tovább előre. De mi van akkor ha ez ne működik? Akkor azt vizsgáljuk meg, hogy van e olyan blokk (ami eggyel magasabb mint a környezetünk) amire fel tudunk ugrani, és ha ilye van, akkor élünk az ebből adódó lehetőséggel. Ezzel az útkeresési és választó aktív folyamatnak hála, a karakterünk hibátlanul, elakadás mentesen tudja megtenni az általunk, a feladat elején megadott megtenni vágyott lépéseknek a számát.
        </para>
    </section>        

</chapter>                
